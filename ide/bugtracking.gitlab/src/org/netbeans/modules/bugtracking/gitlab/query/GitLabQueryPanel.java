/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.netbeans.modules.bugtracking.gitlab.query;

import java.awt.Color;
import java.awt.Component;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import org.netbeans.modules.bugtracking.gitlab.issue.GitLabIssueImpl;

/**
 *
 */
public class GitLabQueryPanel extends javax.swing.JPanel {

    /**
     * Creates new form GitLabQueryPanel
     */
    public GitLabQueryPanel() {
        initComponents();
        labelList.setCellRenderer(new ListCellRenderer<Map.Entry<String, String>>() {
            private final JLabel label = new JLabel();

            @Override
            public Component getListCellRendererComponent(JList<? extends Map.Entry<String, String>> list, Map.Entry<String, String> entry, int index, boolean isSelected, boolean cellHasFocus) {
                label.setText("<html>" + entry.getKey() + "</html>");
                String color = entry.getValue();
                label.setOpaque(true);
                label.setBackground(new Color(
                        Integer.parseInt(color.substring(1, 3), 16),
                        Integer.parseInt(color.substring(3, 5), 16),
                        Integer.parseInt(color.substring(5, 7), 16)
                ));
                return label;
            }
        });
        issueList.setCellRenderer(new ListCellRenderer() {
            private final JLabel label = new JLabel();

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value instanceof GitLabIssueImpl) {
                    GitLabIssueImpl issue = (GitLabIssueImpl) value;
                    label.setText(issue.getDisplayName());
                } else {
                    label.setText(value.toString());
                }
                return label;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        labelLabel = new javax.swing.JLabel();
        issueListScroll = new javax.swing.JScrollPane();
        labelListScroll = new javax.swing.JScrollPane();

        org.openide.awt.Mnemonics.setLocalizedText(titleLabel, org.openide.util.NbBundle.getMessage(GitLabQueryPanel.class, "GitLabQueryPanel.titleLabel.text")); // NOI18N

        titleTextField.setText(org.openide.util.NbBundle.getMessage(GitLabQueryPanel.class, "GitLabQueryPanel.titleTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(labelLabel, org.openide.util.NbBundle.getMessage(GitLabQueryPanel.class, "GitLabQueryPanel.labelLabel.text")); // NOI18N

        issueListScroll.setViewportView(issueList);

        org.openide.awt.Mnemonics.setLocalizedText(refreshButton, org.openide.util.NbBundle.getMessage(GitLabQueryPanel.class, "GitLabQueryPanel.refreshButton.text")); // NOI18N

        labelListScroll.setViewportView(labelList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(issueListScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(refreshButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelLabel)
                            .addComponent(labelListScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelListScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(issueListScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    final javax.swing.JList issueList = new javax.swing.JList();
    private javax.swing.JScrollPane issueListScroll;
    private javax.swing.JLabel labelLabel;
    final javax.swing.JList<Map.Entry<String,String>> labelList = new javax.swing.JList<>();
    private javax.swing.JScrollPane labelListScroll;
    final javax.swing.JButton refreshButton = new javax.swing.JButton();
    private javax.swing.JLabel titleLabel;
    final javax.swing.JTextField titleTextField = new javax.swing.JTextField();
    // End of variables declaration//GEN-END:variables
}
